{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/greeter.ts","src/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","greeter","person","firstName","lastName","greeter_1","user","age","this","fullName","document","body","textContent"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,gB,kECKAA,EAAAK,QAAA,SAAwBC,GACpB,MAAO,eAAeA,EAAOC,UAAS,IAAID,EAAOE,W,qFCNrD,IAAAC,EAAAf,EAAA,aAmBIgB,EAAO,IAdP,SAAmBC,EAAoBJ,EAA0BC,GAA9CI,KAAAD,IAAAA,EAAoBC,KAAAL,UAAAA,EAA0BK,KAAAJ,SAAAA,EAC7DI,KAAKC,SAAW,QAAQF,EAAG,WAAWH,EAAQ,IAAID,EAa/C,CAAY,GAAI,KAAM,OAKjCO,SAASC,KAAKC,YAAcP,EAAAJ,QAAQK","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","interface Person {\n    firstName: string;\n    lastName: string;\n}\n\nexport function greeter(person: Person) {\n    return `Hello, 22ww ${person.firstName} ${person.lastName}`;\n}","import { greeter } from './greeter';\n\nclass Student{\n    fullName: string;\n    // param에 public, private를 붙이는 것은 멤버 변수(fullName같은)를 따로 선언할 필요없이 프로퍼티를 생성하는 축약 방법.\n    constructor(public age: number, public firstName: string, public lastName: string){ \n        this.fullName = `age: ${age}, name: ${lastName} ${firstName}`;\n    }\n}\n\n// interface Person {\n//     firstName: string;\n//     lastName: string;\n// }\n\n// function greeter(person: Person) {\n//     return `Hello, ww ${person.firstName} ${person.lastName}`;\n// }\n\nlet user = new Student(27, 'HK', 'Lee');\n// let user = {firstName: 'HK', lastName: 'Lee'};\n// let user = \"Jane User\";\n// let user = [0,1,2,3]; // 오류 메시지 출력. js파일은 생성됌. 일종의 경고인 셈. Argument of type 'number[]' is not assignable to parameter of type 'string'.\n\ndocument.body.textContent = greeter(user);\n// console.log(greeter(user));"]}